/* === GIRD ===*/

.row {
    max-width: $grid-width;
    margin: 0 auto;

    //&:last-child means .row:last-child() ==> but we are going to use "not" 
    &:not(:last-child) { //select everything except the last child
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    } 

    @include respond(tab-port) {
        max-width: 65rem;
        padding: 0 3rem;
    }

    @include respond(phone) {
        max-width: 50rem;
    }


    
    //clear the collapse row using clearfix
    //.row::after {}
    //@include clearfix;

    //[alt="logo"] {
        //means select all the attribute 'alt' that have value of 'logo'
    //}

    
    //[class^="col-"] { 
        //select all class element that start with col-
        //^= start with col-
        //*= contain with col-
        //$= end with col-
    //}

    //nesting column inside of row
    //.col-1-of-2 { //full width 1140px - gutter / 2
        //width: calc((100% - #{$gutter-horizontal}) / 2); //need to wrap var with #{}
        //background-color: $orange;
        //float: left;

        //need gutter to the right of every column except the last one
        //&:not(:last-child) {
            //margin-right: $gutter-horizontal;
        //}
    //}

    //.col-1-of-3 {
        //width: calc((100% -2 * #{$gutter-horizontal}) / 3);
    //}
  

    @include clearfix;

    [class^="col-"] { 
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;

            @include respond(tab-port) {
            margin-right: 0;
            margin-bottom: $gutter-vertical-small;
        }
        }

        @include respond(tab-port) {
            width: 100% !important;
        }
    }

    .col-1-of-2 { 
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc((2 * (100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc((3 * (100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }

}